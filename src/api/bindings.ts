/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

/**
 * 查询订阅数量
 */
export function dbCountSubscriptions() {
    return invoke()<number>("db_count_subscriptions")
}

/**
 * 获取设置
 */
export function dbGetSettings() {
    return invoke()<Settings>("db_get_settings")
}

/**
 * 插入订阅
 */
export function dbInsertSubscription(doc: Subscription) {
    return invoke()<boolean>("db_insert_subscription", { doc })
}

/**
 * 查询订阅
 */
export function dbQuerySubscriptions() {
    return invoke()<Subscription[]>("db_query_subscriptions")
}

/**
 * 删除订阅
 */
export function dbRemoveSubscription(id: number) {
    return invoke()<boolean>("db_remove_subscription", { id })
}

/**
 * 保存设置
 */
export function dbSetSettings(settings: Settings) {
    return invoke()<null>("db_set_settings", { settings })
}

/**
 * 更新订阅
 */
export function dbUpdateSubscription(doc: Subscription) {
    return invoke()<boolean>("db_update_subscription", { doc })
}

/**
 * 更新订阅
 */
export function updateSubscriptions() {
    return invoke()<null>("update_subscriptions")
}

export type Settings = { socksPort: number; httpPort: number; allowLan: boolean; subUpdateInterval: number; epTestInterval: number; epTestConcurrency: number; epTestUrl: string; rule: string }
/**
 * 订阅分组
 */
export type Subscription = { id: number; name: string; url: string; disabled: boolean | null }
